<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Event">

    <!-- ======================== -->
    <!--  공통 sql                 -->
    <!-- ======================== -->
    <sql id="Sql-Where-Event">
        <if test="@common.util.CommUtils@isNotEmpty(srchText)">
            AND (A.evnt_nm LIKE '%' || #{srchText} || '%')
        </if>
        <if test="@common.util.CommUtils@isNotEmpty(srchBgngYmd)">
            AND (A.evnt_bgng_ymd >= FN_FMT_STRTODATE(#{srchBgngYmd}, ''))
        </if>
        <if test="@common.util.CommUtils@isNotEmpty(srchEndYmd)">
            AND (A.evnt_bgng_ymd <![CDATA[<=]]> FN_FMT_STRTODATE(#{srchEndYmd}, ''))
        </if>
    </sql>
    <sql id="Sql-Where-EventInvt">
        <if test="@common.util.CommUtils@isNotEmpty(evntNo)">
            AND (A.evnt_no = #{evntNo})
        </if>
    </sql>
    <sql id="Sql-Where-EventEnt">
        <if test="@common.util.CommUtils@isNotEmpty(evntNo)">
            AND (A.evnt_no = #{evntNo})
        </if>
    </sql>
    
    <sql id="Sql-Column-Event">
		A.evnt_no								AS "evntNo",
		A.evnt_nm								AS "evntNm",
		A.evnt_cn								AS "evntCn",
		FN_FMT_STRTODATE(A.evnt_bgng_ymd, '-')	AS "evntBgngYmd",
		A.evnt_yr								AS "evntYr",
		COALESCE(#{evntType}, 'INVT')			AS "evntType",
		A.use_yn								AS "useYn",
		A.del_yn								AS "delYn",
		A.rgtr_no										AS "rgtrNo",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd hh24:mi:ss')	AS "regDttm",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd')				AS "regDate",
		A.mdfr_no										AS "mdfrNo",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd hh24:mi:ss')	AS "mdfDttm",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd')				AS "mdfDate",
		( SELECT user_nm
		    FROM tb_user
	       WHERE user_no = A.rgtr_no )            		AS "rgtrNm"
    </sql>
    <sql id="Sql-Column-EventInvt">
		A.evnt_no										AS "evntNo",
		A.bzenty_no										AS "bzentyNo",
		FN_GET_ENTNM(A.bzenty_no)						AS "bzentyNm",
		( SELECT FN_FMT_DATA('RNO', brno)
		    FROM tb_ent
		   WHERE bzenty_no = A.bzenty_no )				AS "brno",
		( SELECT rprsv_nm
		    FROM tb_ent
	       WHERE bzenty_no = A.bzenty_no )           	AS "rprsvNm",
	    ( SELECT EXISTS ( SELECT 1
	                        FROM tb_opinion_ir
	                       WHERE evnt_no = A.evnt_no
	                         AND bzenty_no = A.bzenty_no 
	                    )
	    )												AS "isRgst",
		A.rgtr_no										AS "rgtrNo",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd hh24:mi:ss')	AS "regDttm",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd')				AS "regDate",
		A.mdfr_no										AS "mdfrNo",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd hh24:mi:ss')	AS "mdfDttm",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd')				AS "mdfDate",
		( SELECT user_nm
		    FROM tb_user
	       WHERE user_no = A.rgtr_no )            		AS "rgtrNm"
    </sql>
    <sql id="Sql-Column-EventEnt">
    	A.evnt_partcptn_no			AS "evntPartcptnNo",
		A.evnt_no					AS "evntNo",
		A.bzenty_no					AS "bzentyNo",
		FN_FMT_DATA('RNO', A.brno)	AS "brno",
		A.bzenty_nm					AS "bzentyNm",
		A.rprsv_nm					AS "rprsvNm",
		A.telno						AS "telno",
		A.eml_addr					AS "emlAddr",
		A.main_biz_cn				AS "mainBizCn",
		A.inq_cnt					AS "inqCnt",
		( SELECT EXISTS ( SELECT 1
	                        FROM tb_opinion_ir
	                       WHERE evnt_no = A.evnt_no
	                         AND evnt_partcptn_no = A.evnt_partcptn_no 
	                    )
	    )												AS "isRgst",
		A.rgtr_no										AS "rgtrNo",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd hh24:mi:ss')	AS "regDttm",
		TO_CHAR(A.REG_YMD,   'yyyy-mm-dd')				AS "regDate",
		A.mdfr_no										AS "mdfrNo",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd hh24:mi:ss')	AS "mdfDttm",
		TO_CHAR(A.MDFCN_YMD, 'yyyy-mm-dd')				AS "mdfDate",
		( SELECT user_nm
		    FROM tb_user
	       WHERE user_no = A.rgtr_no )            		AS "rgtrNm"
    </sql>

    <!-- 투자설명회 목록조회 -->
    <select id="listEvent" resultType="java.util.HashMap" parameterType="business.adm.invest.service.EventVO">
        SELECT <include refid="Sql-Column-Event"/>
          FROM tb_event_mng A
         WHERE 1 = 1
           AND del_yn = 'N'
         	   <include refid="Sql-Where-Event"/>
         ORDER BY 
               A.evnt_no DESC
    </select>
    <select id="listEventCount" resultType="int" parameterType="business.adm.invest.service.EventVO">
        SELECT COUNT(1) 
          FROM tb_event_mng A
         WHERE 1 = 1
           AND del_yn = 'N'
               <include refid="Sql-Where-Event"/>
    </select>
    
    <!-- 투자설명회 상세조회 -->
    <select id="viewEvent" resultType="business.adm.invest.service.EventVO" parameterType="business.adm.invest.service.EventVO">
        SELECT <include refid="Sql-Column-Event"/>
          FROM tb_event_mng A
         WHERE evnt_no = #{evntNo}
    </select>
    
    <!-- 투자설명회 등록 -->
    <insert id="regiEvent" parameterType="business.adm.invest.service.EventVO">
    	<selectKey keyProperty="evntNo" resultType="string" order="BEFORE">
    		SELECT 'E'||TO_CHAR(NOW(), 'YY')||LPAD(NEXTVAL('SEQ_EVENT_MNG')::text, 7, '0')
    	</selectKey>
        INSERT 
          INTO tb_event_mng 
             ( evnt_no,
               evnt_nm,
               evnt_cn,
               evnt_bgng_ymd,
               evnt_yr,
               use_yn,
               del_yn,
               rgtr_no,
               reg_ymd  
             )
        VALUES
             ( #{evntNo},
               #{evntNm},
               #{evntCn},
               FN_FMT_STRTODATE(#{evntBgngYmd}, ''),
               SUBSTRING(#{evntBgngYmd}, 1, 4),
               <if test="@common.util.CommUtils@isNotEmpty(useYn)">#{useYn}</if><if test="@common.util.CommUtils@isEmpty(useYn)">'N'</if>,
               'N',
               #{gsUserNo},
               NOW()  
             )
    </insert>
    
    <!-- 투자설명회 수정 -->
    <update id="updtEvent" parameterType="business.adm.invest.service.EventVO">
		UPDATE tb_event_mng 
           SET MDFR_NO = #{gsUserNo},
		<if test="@common.util.CommUtils@isNotEmpty(evntNm     )"> evnt_nm		 = #{evntNm},</if>
		<if test="@common.util.CommUtils@isNotEmpty(evntCn     )"> evnt_cn		 = #{evntCn},</if>
		<if test="@common.util.CommUtils@isNotEmpty(evntBgngYmd)"> evnt_bgng_ymd = FN_FMT_STRTODATE(#{evntBgngYmd}, ''),</if>
		<if test="@common.util.CommUtils@isNotEmpty(evntYr     )"> evnt_yr		 = SUBSTRING(#{evntBgngYmd}, 1, 4),</if>
		<if test="@common.util.CommUtils@isNotEmpty(useYn        )"> use_yn		 = #{useYn},</if>
		<if test="@common.util.CommUtils@isEmpty(useYn           )"> use_yn		 = 'N',</if>
               MDFCN_YMD = NOW()
         WHERE evnt_no = #{evntNo}
    </update>
    
    <!-- 투자설명회 삭제 -->
    <update id="deltEvent" parameterType="business.adm.invest.service.EventVO">
        UPDATE tb_event_mng
           SET del_yn = 'Y'
         WHERE evnt_no = #{evntNo}
    </update>
    
    
    
    <!-- 참여 투자자 목록조회 -->
    <select id="listEventInvt" resultType="java.util.HashMap" parameterType="business.adm.invest.service.EventVO">
        SELECT <include refid="Sql-Column-EventInvt"/>
          FROM tb_event_invt A
         WHERE 1 = 1
         	   <include refid="Sql-Where-EventInvt"/>
         ORDER BY 
               A.evnt_no DESC, A.bzenty_no DESC
    </select>
    <select id="listEventInvtCount" resultType="int" parameterType="business.adm.invest.service.EventVO">
        SELECT COUNT(1) 
          FROM tb_event_invt A
         WHERE 1 = 1
               <include refid="Sql-Where-EventInvt"/>
    </select>
    
    <!-- 참여 투자자 상세조회 -->
    <select id="viewEventInvt" resultType="int" parameterType="business.adm.invest.service.EventVO">
        SELECT COUNT(1)
          FROM tb_event_invt A
         WHERE 1 = 1
           AND A.bzenty_no = #{bzentyNo}
         	   <include refid="Sql-Where-EventInvt"/>
    </select>
    
    <!-- 참여 경영체 목록조회 -->
    <select id="listEventEnt" resultType="java.util.HashMap" parameterType="business.adm.invest.service.EventVO">
        SELECT <include refid="Sql-Column-EventEnt"/>
          FROM tb_event_ent A
         WHERE 1 = 1
         	   <include refid="Sql-Where-EventEnt"/>
         ORDER BY 
               A.EVNT_PARTCPTN_NO DESC
    </select>
    <select id="listEventEntCount" resultType="int" parameterType="business.adm.invest.service.EventVO">
        SELECT COUNT(1) 
          FROM tb_event_ent A
         WHERE 1 = 1
               <include refid="Sql-Where-EventEnt"/>
    </select>
    
    <!-- 참여 투자자 등록 -->
    <insert id="regiEventInvt" parameterType="business.adm.invest.service.EventVO">
        INSERT 
          INTO tb_event_invt
             ( evnt_no,
               bzenty_no,
               rgtr_no,
               reg_ymd  
             )
        VALUES
        	 ( #{evntNo},
               #{bzentyNo},
               #{gsUserNo},
               NOW()  
             )
    </insert>
    
    <!-- 참여 투자자 삭제 -->
    <delete id="deltEventInvt" parameterType="business.adm.invest.service.EventVO">
        DELETE 
          FROM tb_event_invt 
         WHERE evnt_no = #{evntNo}
           AND bzenty_no = #{bzentyNo}
    </delete>
    
    <!-- 참여 경영체 사업계획서 등록 -->
    <insert id="regiEventEnt" parameterType="business.adm.invest.service.EventVO">
    	<selectKey keyProperty="evntPartcptnNo" resultType="string" order="BEFORE">
    		SELECT 'EP'||TO_CHAR(NOW(), 'YY')||LPAD(NEXTVAL('SEQ_EVENT_ENT')::text, 6, '0')
    	</selectKey>
        INSERT 
          INTO tb_event_ent
             ( evnt_partcptn_no,
               evnt_no,
               bzenty_no,
               brno,
               bzenty_nm,
               rprsv_nm,
               telno,
               eml_addr,
               main_biz_cn,
               inq_cnt,
               rgtr_no,
               reg_ymd  
             )
        VALUES
             ( #{evntPartcptnNo},
               #{evntNo},
               NULL,
               #{brno},
               #{bzentyNm},
               #{rprsvNm},
               #{telno},
               #{emlAddr},
               #{mainBizCn},
               0,
               #{gsUserNo},
               NOW()  
             )
    </insert>
    
    <!-- 참여 경영체 삭제 -->
    <delete id="deltEventEnt" parameterType="business.adm.invest.service.EventVO">
        DELETE 
          FROM tb_event_ent
         WHERE evnt_partcptn_no = #{evntPartcptnNo}
    </delete>
    
    
    
    <!-- 투자설명회 상세조회 -->
    <select id="getEventEntExist" resultType="boolean" parameterType="business.adm.invest.service.EventVO">
        SELECT EXISTS(SELECT 1
                        FROM TB_OPINION_IR A
			           WHERE A.EVNT_NO = #{evntNo}
			             AND A.PRGRS_STTS_CD = '10'
                     )
    </select>
    
</mapper>