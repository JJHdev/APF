<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Bbs">
    <!-- ======================== -->
    <!--  공통 sql                -->
    <!-- ======================== -->
    <sql id="Sql-Where">
        <if test="@common.util.CommUtils@isEqual(srchType,'all')">
            AND (A.pst_ttl LIKE '%'|| #{srchText} || '%'
             OR  A.pst_cn  LIKE '%'|| #{srchText} || '%')
        </if>
        <if test="@common.util.CommUtils@isEqual(srchType,'title')">
			AND  A.pst_ttl LIKE '%'|| #{srchText} || '%'
        </if>
        <if test="@common.util.CommUtils@isEqual(srchType,'content')">
			AND  A.pst_cn  LIKE '%'|| #{srchText} || '%'
        </if>
    	<if test="@common.util.CommUtils@isNotEmpty(bbsSeCd)">
			AND A.bbs_se_cd = #{bbsSeCd}
		</if>
    </sql>
    <sql id="Sql-Column">
        A.pst_no                                       AS "pstNo",
        A.up_pst_no                                    AS "upPstNo",
        A.bbs_se_cd                                    AS "bbsSeCd",
        FN_GET_CODENM('CT.BBS_SE', A.bbs_se_cd)        AS "bbsSeNm",
        A.pst_clsf_cd                                  AS "pstClsfCd",
        FN_GET_CODENM('CT.NTT_CL', A.pst_clsf_cd)      AS "pstClsfNm",
        A.annymty                                      AS "annymty",
        A.pst_ttl                                      AS "pstTtl",
        A.pst_cn                                       AS "pstCn",
        FN_FMT_STRTODATE(A.pstg_bgng_ymd,'-')          AS "pstgBgngYmd",
        FN_FMT_STRTODATE(A.pstg_end_ymd ,'-')          AS "pstgEndYmd",
        FN_FMT_STRTODATE(A.fixing_bgng_ymd,'-')        AS "fixingBgngYmd",
        FN_FMT_STRTODATE(A.fixing_end_ymd ,'-')        AS "fixingEndYmd",
        A.pst_link_url                                 AS "pstLinkUrl",
        A.eml_addr                                     AS "emlAddr",
        A.tag_cn                                       AS "tagCn",
        A.inq_cnt                                      AS "inqCnt",
        A.rcmdtn_cnt                                   AS "rcmdtnCnt",
        A.pst_pswd                                     AS "pstPswd",
        A.ntc_yn                                       AS "ntcYn",
        A.fixing_yn                                    AS "fixingYn",
        A.rls_yn                                       AS "rlsYn",
        A.del_yn                                       AS "delYn",
        A.popup_yn                                     AS "popupYn",
        A.popup_hg                                     AS "popupHg",
        A.popup_ar                                     AS "popupAr",
        A.rgtr_no                                      AS "rgtrNo",
        TO_CHAR(A.reg_ymd,   'yyyy-mm-dd hh24:mi:ss')  AS "regDttm",
		TO_CHAR(A.reg_ymd,   'yyyy-mm-dd')             AS "regDate",
        A.mdfr_no                                      AS "mdfrNo",
        TO_CHAR(A.mdfcn_ymd, 'yyyy-mm-dd hh24:mi:ss')  AS "mdfDttm",
		TO_CHAR(A.mdfcn_ymd, 'yyyy-mm-dd')             AS "mdfDate",
	   (SELECT user_nm
	      FROM tb_user
	     WHERE user_no = A.rgtr_no)                    AS "rgtrNm",
	   (SELECT user_nm
	      FROM tb_user
	     WHERE user_no = A.mdfr_no)                    AS "mdfrNm"
     <if test="@common.util.CommUtils@isNotEmpty(gsUserNo)">
   	   ,(SELECT user_nm
	      FROM tb_user
	     WHERE user_no = #{gsUserNo})                  AS "gsUserNm"
     </if>
    </sql>
    
	<sql id="Sql-SrchWordColumn">
	    A.sn                                            AS "sn",
	    A.srchwrd                                       AS "srchWrd",
	    A.ip_addr                                       AS "ipAddr",
	    A.rgtr_no                                       AS "rgtrNo",
	    TO_CHAR(A.reg_ymd, 'yyyy-mm-dd hh24:mi:ss')     AS "regDttm",
	    TO_CHAR(A.reg_ymd, 'yyyy-mm-dd')                AS "regDate",
	    A.mdfr_no                                       AS "mdfrNo",
	    TO_CHAR(A.mdfcn_ymd, 'yyyy-mm-dd hh24:mi:ss')   AS "mdfDttm",
	    TO_CHAR(A.mdfcn_ymd, 'yyyy-mm-dd')              AS "mdfDate",
	    (SELECT user_nm
	       FROM tb_user
	      WHERE user_no = A.rgtr_no)                    AS "rgtrNm",
	    (SELECT user_nm
	       FROM tb_user
	      WHERE user_no = A.mdfr_no)                    AS "mdfrNm"
	</sql>
    
    <!-- 처리 상태코드 -->
    <sql id="Sql-clsfColumn">
   		<if test="@common.util.CommUtils@isEqual(@business.adm.CodeConst@BBS_QNA,bbsSeCd)">
            ,CASE 
                WHEN EXISTS (SELECT 1 FROM tb_bbs B WHERE B.up_pst_no = A.pst_no AND del_yn='N') THEN '답변완료'
                ELSE '대기중'
            END AS "prcsSttsCd"
		</if>
   		<if test="@common.util.CommUtils@isEqual(@business.adm.CodeConst@BBS_QNA,bbsSeCd)">
            ,(SELECT C.cd_nm
       		FROM sys_code C
       		WHERE C.cd_id = A.pst_clsf_cd AND C.up_cd_id = 'CT.INQRY_CL') AS "inqryTypeNm"
		</if>
    </sql>
    
    <!-- QNA관리자 답변코드 제외조건 -->
    <sql id="Sql-QnaWhere">
   		<if test="@common.util.CommUtils@isEqual(@business.adm.CodeConst@BBS_QNA,bbsSeCd)">
            AND A.up_pst_no IS NULL
		</if>
    </sql>
    
    <!-- 삭제한 게시물 제외 -->
    <sql id="Sql-delNotWhere">
    	And del_yn='N'
    </sql>
    
    <!-- 게시판 목록조회 -->
    <select id="listBbs" resultType="java.util.HashMap" parameterType="business.adm.inform.service.BbsVO">
        SELECT <include refid="Sql-Column"/>
			   <include refid="Sql-clsfColumn"/>
          FROM tb_bbs A
         WHERE 1 = 1
               <include refid="Sql-Where"/>
               <include refid="Sql-QnaWhere"/>
               <include refid="Sql-delNotWhere"/>
         ORDER BY 
	         <if test="@common.util.CommUtils@isEqual(ordrField, 'inq_cnt')">
	               A.inq_cnt DESC,
	        </if>
			CASE WHEN CURRENT_DATE BETWEEN TO_DATE(A.fixing_bgng_ymd, 'YYYYMMDD') AND TO_DATE(A.fixing_end_ymd, 'YYYYMMDD') AND A.fixing_yn = 'Y'
			     THEN 1
			     ELSE 2
			END,
			     A.reg_ymd DESC
    </select>
    
    <select id="listBbsCount" resultType="int" parameterType="business.adm.inform.service.BbsVO">
        SELECT COUNT(1) 
          FROM tb_bbs A
         WHERE 1 = 1        
               <include refid="Sql-Where"/>
               <include refid="Sql-QnaWhere"/>
               <include refid="Sql-delNotWhere"/> 
    </select>
    
        <!-- 검색어 관리 목록조회 -->
    <select id="listSrchWord" resultType="java.util.HashMap" parameterType="business.adm.inform.service.SrchWordVO">
		SELECT ROW_NUMBER() OVER(ORDER BY count DESC) AS rank, srchwrd, count
		  FROM (SELECT srchwrd, COUNT(srchwrd) AS count
		          FROM sys_srchwrd
		         GROUP
		            BY srchwrd
		       ) subquery
	 	 ORDER
	 	    BY count DESC
		 LIMIT 10
    </select>
    
        <!-- 검색어 관리 엑셀 다운로드 -->
    <select id="downSrchWordExcel" resultType="java.util.HashMap" parameterType="business.adm.inform.service.SrchWordVO">
		SELECT ROW_NUMBER() OVER(ORDER BY count DESC) AS rank, srchwrd, count
		  FROM (SELECT srchwrd, COUNT(srchwrd) AS count
		          FROM sys_srchwrd
		         GROUP
		            BY srchwrd
		       ) subquery
	 	 ORDER
	 	    BY count DESC
    </select>
    
        <!-- 검색어 관리 리스트 갯수 -->   
    <select id="listSrchWordCount" resultType="int" parameterType="business.adm.inform.service.SrchWordVO">
        SELECT COUNT(1) 
          FROM sys_srchwrd A
         WHERE 1 = 1        
    </select>
    
        <!-- 검색어 관리 삭제 -->
    <delete id="deleteSrchWord" parameterType="business.adm.inform.service.SrchWordVO">
        DELETE
          FROM sys_srchWrd
         WHERE srchwrd = #{srchWrd}
    </delete> 

    <!-- 게시판 상세조회 -->
    <select id="viewBbs" resultType="business.adm.inform.service.BbsVO" parameterType="business.adm.inform.service.BbsVO">
        SELECT <include refid="Sql-Column"/>
        	   <include refid="Sql-clsfColumn"/>
          FROM tb_bbs A
         WHERE pst_no = #{pstNo} 
         	   <include refid="Sql-delNotWhere"/>
    </select>
    
    <!-- 다음 글 번호 조회 -->
    <select id="nextBbs" resultType="business.adm.inform.service.BbsVO" parameterType="business.adm.inform.service.BbsVO">
    	SELECT  pstNo, bbs_se_cd AS bbsSeCd
		  FROM  (SELECT  pst_no,
			      		 bbs_se_cd,
		          		 LEAD(pst_no) OVER (ORDER BY pst_no) as pstNo
		    	   FROM  tb_bbs A
		  	      WHERE  bbs_se_cd = #{bbsSeCd}
				  	     <include refid="Sql-QnaWhere"/>
				  	     <include refid="Sql-delNotWhere"/> 
				  	     ) t
	     WHERE  pst_no = #{pstNo}
    </select>
    <!-- 이전 글 번호 조회 --> 
    <select id="beforeBbs" resultType="business.adm.inform.service.BbsVO" parameterType="business.adm.inform.service.BbsVO">
  		SELECT  pstNo, bbs_se_cd AS bbsSeCd
		  FROM  (SELECT  LAG(pst_no) OVER (ORDER BY pst_no) as pstNo,
		                 pst_no,
			      		 bbs_se_cd
		    	   FROM  tb_bbs A
		  	      WHERE  bbs_se_cd = #{bbsSeCd}
				  	     <include refid="Sql-QnaWhere"/>
				  	     <include refid="Sql-delNotWhere"/> 
				  	     ) t
	     WHERE  pst_no = #{pstNo}
    </select>
    
    <!-- 게시판 1:1문의 관리자 답변 상세조회 -->
    <select id="viewQnaBbs" resultType="business.adm.inform.service.BbsVO" parameterType="business.adm.inform.service.BbsVO">
        SELECT <include refid="Sql-Column"/>
          FROM tb_bbs A
         WHERE up_pst_no = #{pstNo}
         	   <include refid="Sql-delNotWhere"/>
    </select>
    
    <!-- Sys_Code 조회 -->
    <select id="getSysCode" resultType="java.util.HashMap" parameterType="business.adm.inform.service.BbsVO">
		SELECT B.cd_nm AS text, B.cd_id AS code
		  FROM SYS_CODE B
		 WHERE 1 = 1 
		   AND B.cd_cn  = #{prcsSttsCd}
		   AND B.use_yn = 'Y'
    </select>

    <!-- 게시판 등록 -->
    <insert id="regiBbs" parameterType="business.adm.inform.service.BbsVO">
    	<selectKey keyProperty="pstNo" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('SEQ_BBS')
    	</selectKey>
        INSERT
          INTO tb_bbs 
             ( pst_no,
               up_pst_no,
               bbs_se_cd,
               pst_clsf_cd,
               inqry_type_cd,
               annymty,
               pst_ttl,
               pst_cn,
               pstg_bgng_ymd,
               pstg_end_ymd,
               fixing_bgng_ymd,
               fixing_end_ymd,
               pst_link_url,
               eml_addr,
               tag_cn,
               inq_cnt,
               rcmdtn_cnt,
               pst_pswd,
               ntc_yn,
               fixing_yn,
               rls_yn,
               del_yn,
               popup_yn,
               popup_hg,
               popup_ar,
               rgtr_no,
               reg_ymd  
             )
        VALUES
             ( #{pstNo},
               #{upPstNo},
               #{bbsSeCd},
               #{pstClsfCd},
               #{inqryTypeCd},
               #{annymty},
               #{pstTtl},
               #{pstCn},
               FN_FMT_STRTODATE(#{pstgBgngYmd},''),
               FN_FMT_STRTODATE(#{pstgEndYmd },''),
               FN_FMT_STRTODATE(#{fixingBgngYmd},''),
               FN_FMT_STRTODATE(#{fixingEndYmd },''),
               #{pstLinkUrl},
               #{emlAddr},
               #{tagCn},
               0,
               0,
               #{pstPswd},
               'N',
               <if test="@common.util.CommUtils@isNotEmpty(fixingYn)">#{fixingYn}</if><if test="@common.util.CommUtils@isEmpty(fixingYn)">'N'</if>,
               'Y',
               'N',
               <if test="@common.util.CommUtils@isNotEmpty(popupYn)">#{popupYn}</if><if test="@common.util.CommUtils@isEmpty(popupYn)">'N'</if>,
               #{popupHg},
               #{popupAr},
               #{gsUserNo},
               NOW()  
             )
    </insert>

    <!-- 게시판 수정 -->
    <update id="updtBbs" parameterType="business.adm.inform.service.BbsVO">
        UPDATE tb_bbs 
           SET mdfr_no   = #{gsUserNo},
		<if test="@common.util.CommUtils@isNotEmpty(upPstNo             )"> up_pst_no            = #{upPstNo             },</if>
		<if test="@common.util.CommUtils@isNotEmpty(bbsSeCd             )"> bbs_se_cd            = #{bbsSeCd             },</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstClsfCd           )"> pst_clsf_cd          = #{pstClsfCd           },</if>
		<if test="@common.util.CommUtils@isNotEmpty(annymty             )"> annymty              = #{annymty             },</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstTtl              )"> pst_ttl              = #{pstTtl              },</if>
		<if test="@common.util.CommUtils@isEmpty   (pstTtl     			)"> pst_ttl        		 = #{pstTtl              },</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstCn               )"> pst_cn               = #{pstCn               },</if>
		<if test="@common.util.CommUtils@isEmpty   (pstCn     			)"> pst_cn        		 = #{pstCn               },</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstgBgngYmd         )"> pstg_bgng_ymd        = FN_FMT_STRTODATE(#{pstgBgngYmd},''),</if>
		<if test="@common.util.CommUtils@isEmpty   (pstgBgngYmd         )"> pstg_bgng_ymd        = FN_FMT_STRTODATE(#{pstgBgngYmd},''),</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstgEndYmd          )"> pstg_end_ymd         = FN_FMT_STRTODATE(#{pstgEndYmd },''),</if>
		<if test="@common.util.CommUtils@isEmpty   (pstgEndYmd          )"> pstg_end_ymd         = FN_FMT_STRTODATE(#{pstgEndYmd },''),</if>
		<if test="@common.util.CommUtils@isNotEmpty(fixingBgngYmd       )"> fixing_bgng_ymd      = FN_FMT_STRTODATE(#{fixingBgngYmd},''),</if>
		<if test="@common.util.CommUtils@isEmpty   (fixingBgngYmd       )"> fixing_bgng_ymd      = FN_FMT_STRTODATE(#{fixingBgngYmd },''),</if>
		<if test="@common.util.CommUtils@isNotEmpty(fixingEndYmd        )"> fixing_end_ymd       = FN_FMT_STRTODATE(#{fixingEndYmd },''),</if>
		<if test="@common.util.CommUtils@isEmpty   (fixingEndYmd        )"> fixing_end_ymd       = FN_FMT_STRTODATE(#{fixingEndYmd },''),</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstLinkUrl          )"> pst_link_url         = #{pstLinkUrl          },</if>
		<if test="@common.util.CommUtils@isEmpty   (pstLinkUrl   		)"> pst_link_url         = #{pstLinkUrl          },</if>
		<if test="@common.util.CommUtils@isNotEmpty(emlAddr             )"> eml_addr             = #{emlAddr             },</if>
		<if test="@common.util.CommUtils@isNotEmpty(tagCn               )"> tag_cn               = #{tagCn               },</if>
		<if test="@common.util.CommUtils@isNotEmpty(pstPswd             )"> pst_pswd             = #{pstPswd             },</if>
		<if test="@common.util.CommUtils@isNotEmpty(fixingYn            )"> fixing_yn            = #{fixingYn            },</if>
		<if test="@common.util.CommUtils@isEmpty   (fixingYn            )"> fixing_yn            = 'N'                    ,</if>
		<if test="@common.util.CommUtils@isNotEmpty(popupYn             )"> popup_yn             = #{popupYn             },</if>
		<if test="@common.util.CommUtils@isEmpty   (popupYn             )"> popup_yn             = 'N'                    ,</if>
		<if test="@common.util.CommUtils@isNotEmpty(popupHg             )"> popup_hg             = #{popupHg             },</if>
		<if test="@common.util.CommUtils@isEmpty   (popupHg             )"> popup_hg             = null                   ,</if>
		<if test="@common.util.CommUtils@isNotEmpty(popupAr             )"> popup_ar             = #{popupAr             },</if> 
		<if test="@common.util.CommUtils@isEmpty   (popupAr             )"> popup_ar             = null                   ,</if>
               mdfcn_ymd = NOW()
         WHERE pst_no    = #{pstNo}
    </update>

    <!-- 게시판 조회수 증가 -->
    <update id="updtBbsInqCnt" parameterType="business.adm.inform.service.BbsVO">
        UPDATE tb_bbs 
           SET inq_cnt   = inq_cnt + 1,
         WHERE pst_no    = #{pstNo}
    </update>
    
    <!-- 게시판 추천수 증가 -->
    <update id="updtBbsRecmdtCnt" parameterType="business.adm.inform.service.BbsVO">
        UPDATE tb_bbs 
           SET rcmdtn_cnt = rcmdtn_cnt + 1
         WHERE pst_no     = #{pstNo}
    </update>

    <!-- 게시판 삭제 -->
    <update id="deltBbs" parameterType="business.adm.inform.service.BbsVO">
        UPDATE tb_bbs 
           SET del_yn     = 'Y'
             , mdfr_no    = #{gsUserNo}
             , mdfcn_ymd  = NOW()
         WHERE pst_no     = #{pstNo}
    </update> 

</mapper>
